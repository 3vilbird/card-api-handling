{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","userService","toastr","title","getUser","subscribe","user","console","log","results","err","error","status","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","CardComponent","faEnvelope","faMapMarkedAlt","faPhone","faDatabase","window","location","reload","refresh","UserService","http","url","get","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"./services/user.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  title = \"simple-card-apihandle\";\n  user: any;\n\n  constructor(private userService: UserService, private toastr: ToastrService) {\n    //\n  }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(\n      (user: any) => {\n        console.log(\"====================================\");\n        console.log(user);\n        console.log(\"====================================\");\n        this.user = user.results[0];\n      },\n      (err) => {\n        this.toastr.error(err.status, \"Ooops!\");\n      }\n    );\n  }\n}\n","<div class=\"app p-4 container-fluid\">\n  <div class=\"row\">\n    <div class=\"col col-md-4 offset-md-4\">\n      <div class=\"text-center\">\n        <app-card [user]=\"user\" *ngIf=\"user; else loadingBlock\"></app-card>\n\n        <ng-template #loadingBlock>\n          <div class=\"text-center mt-6\">\n            <div\n              class=\"spinner-border spinner-grow-mg text-white\"\n              role=\"status\"\n            ></div>\n            <div class=\"text-white\">\n              loading....\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\n//http client\nimport { HttpClientModule } from \"@angular/common/http\";\n\n//toast\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ToastrModule } from \"ngx-toastr\";\n\n// font awsome\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\nimport { AppComponent } from \"./app.component\";\nimport { CardComponent } from \"./components/card/card.component\";\n\n@NgModule({\n  declarations: [AppComponent, CardComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    FontAwesomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport {\n  faEnvelope,\n  faMapMarkedAlt,\n  faPhone,\n  faDatabase,\n  faMapMarkerAlt\n} from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"],\n})\nexport class CardComponent implements OnInit {\n  @Input() user;\n\n  faEnvelope = faEnvelope;\n  faMapMarkedAlt = faMapMarkerAlt;\n  faPhone = faPhone;\n  faDatabase = faDatabase;\n\n  constructor() {}\n  refresh(): void {\n    window.location.reload();\n}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card\">\n  <div class=\"card-body text-center\">\n    <img\n      width=\"150\"\n      height=\"150\"\n      class=\"rounded-circle img-thumbnail border-danger\"\n      [src]=\"user.picture?.large\"\n      alt=\"\"\n    />\n    <div class=\"card-title text-primary\">\n      <h1>\n        <span class=\"px-2\">{{ user.name?.title }}.</span>\n        <span class=\"px-2\">{{ user.name?.first }}</span>\n        <span class=\"px-2\">{{ user.name?.last }}</span>\n      </h1>\n    </div>\n    <div class=\"card-text\">\n      <fa-icon [icon]=\"faEnvelope\"></fa-icon>\n      {{ user.email }}\n    </div>\n    <div class=\"card-text\">\n      <fa-icon [icon]=\"faMapMarkedAlt\"></fa-icon>\n      {{ user.location?.city }}\n      {{ user.location?.state }} {{ user.location?.street?.name\n      }}{{ user.location?.street?.number }}\n    </div>\n    <div class=\"card-text\">\n      <fa-icon [icon]=\"faPhone\"></fa-icon>\n      {{ user.phone }}\n    </div>\n    <div class=\"card-text\">\n      <fa-icon [icon]=\"faDatabase\"></fa-icon>\n      Registered on : {{ user.registered.date | date }}\n    </div>\n  </div>\n  <button class=\"btn btn-primary\" (click)=\"refresh()\">Refresh</button>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private url = \"https://randomuser.me/api\";\n  constructor(private http: HttpClient) {}\n\n  getUser = () => {\n    // here the http is automatically makes it an observable no need to do manually :)\n    return this.http.get(this.url);\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}